<?xml version="1.0" encoding="UTF-8"?>
<!-- SPDX-FileCopyrightText: Copyright DB InfraGO AG and contributors
SPDX-License-Identifier: Apache-2.0 -->
<enumeration>
    <option description="Graphische representation (Diagram) eines Elements oder mehrere Elementen." iconURL="/polarion/icons/group/Capella_Diagram.png" id="_C2P_diagram" name="Diagram" sortOrder="1" />
    <option description="An Operational Capability" iconURL="/polarion/icons/group/Capella_OperationalCapability.gif" id="_C2P_operationalCapability" name="Operational Capability" sortOrder="2" />
    <option description="An Operational Entity" iconURL="/polarion/icons/group/Capella_Entity.gif" id="_C2P_operationalEntity" name="Operational Entity" sortOrder="3" />
    <option description="An Operational Activity" iconURL="/polarion/icons/group/Capella_OperationalActivity.gif" id="_C2P_operationalActivity" name="Operational Activity" sortOrder="4" />
    <option description="Die &quot;Operational Interaction&quot; ist Capella-intern als &quot;Functional Exchange&quot; abgebildet und bezeichnet den Datenaustausch, welche zwischen den Operational Activities statt findet." iconURL="/polarion/icons/group/Capella_FunctionalExchange_OA.gif" id="_C2P_operationalInteraction" name="Operational Interaction" sortOrder="5" />
    <option description="Beschreibt ein eine external Entität welche mit dem System interagiert." iconURL="/polarion/icons/group/Capella_Actor.gif" id="_C2P_systemActor" name="System Actor" sortOrder="6" />
    <option description="Bezeichnet die Fähigkeit vom System einen Service zur Verfügung zu stellen, welches die Erfüllung von operationalen Activities unterstützt." iconURL="/polarion/icons/group/Capella_Capability.gif" id="_C2P_systemCapability" name="System Capability" sortOrder="7" />
    <option description="Bezeichnet die Fähigkeit vom System einen Service zur Verfügung zu stellen, welches die Erfüllung von System Capabilities unterstützt." iconURL="/polarion/icons/group/Capella_CapabilityRealization.gif" id="_C2P_capabilityRealization" name="Capability Realization" sortOrder="8" />
    <option description="Beschreibt ein System oder Teile davon." iconURL="/polarion/icons/group/Capella_System.gif" id="_C2P_systemComponent" name="System Component" sortOrder="9" />
    <option description="Beschreibt eine Funktionalität des Systems welche in der Regel eine oder mehrere Operational Activities verfeinert." iconURL="/polarion/icons/group/Capella_SystemFunction.gif" id="_C2P_systemFunction" name="System Function" sortOrder="10" />
    <option description="Bezeichnet der Informationsaustausch zwischen Functions." iconURL="/polarion/icons/group/Capella_FunctionalExchange.gif" id="_C2P_functionalExchange" name="Functional Exchange" sortOrder="11" />
    <option description="Bezeichnet der Informationsaustausch zwischen System Functions." iconURL="/polarion/icons/group/Capella_FunctionalExchange.gif" id="_C2P_systemfunctionalExchange" name="System Functional Exchange" sortOrder="12" />
    <option description="Bezeichnet der Informationsaustausch zwischen Logical Functions." iconURL="/polarion/icons/group/Capella_FunctionalExchange.gif" id="_C2P_logicalfunctionalExchange" name="Logical Functional Exchange" sortOrder="13" />
    <option description="A Functional Chain is a mean to describe one specific path among all possible paths traversing the dataflow, either to describe an expected behavior of the System in a given context, or in order to express some non functional properties along this functional path (latency, criticality, confidentiality, redundancy...).  An elementary Functional Chain is made of a succession of Functions and Exchanges across a functional dataflow, starting and ending with a Function (allocated to the System or to an Actor)." iconURL="/polarion/icons/group/Capella_FunctionalChain.gif" id="_C2P_systemFunctionalChain" name="System Functional Chain" sortOrder="14" />
    <option description="Repräsentiert die Verbindung zwischen zwei Komponenten, oder Zwischen einer Komponente und einem Aktor." iconURL="/polarion/icons/group/Capella_ComponentExchange.gif" id="_C2P_componentExchange" name="Component Exchange" sortOrder="15" />
    <option description="Interface Scenario zeigt die Kommunikation zwischen Komponenten und/oder Aktoren mit Sequence Messages." iconURL="/polarion/icons/group/Capella_Scenario.gif" id="_C2P_isScenario" name="IS Scenario" sortOrder="16" />
    <option description="Beschreibt die Logische Bestandteile des Systems als &quot;white box&quot;, ohne Technologie Behaftung." iconURL="/polarion/icons/group/Capella_LogicalComponent.gif" id="_C2P_logicalComponent" name="Logical Component" sortOrder="17" />
    <option description="Logische Entität welche mit System-Komponente(n) interagiert." iconURL="/polarion/icons/group/Capella_Actor.gif" id="_C2P_logicalActor" name="Logical Actor" sortOrder="18" />
    <option description="Funktion beschrieben in der Logischen Architektur. Sie verfeinert in der Regel eine oder Mehrere Funktionen in der System Architektur." iconURL="/polarion/icons/group/Capella_LogicalFunction.gif" id="_C2P_logicalFunction" name="Logical Function" sortOrder="19" />
    <option description="A Sequence Message carry an interaction between the element represented by the source lifeline and the one represented by the target lifeline.  In Capella, according to the kind of Scenario, Sequence Messages can refer to Functional Exchanges, Component Exchanges, Exchange Items." iconURL="/polarion/icons/group/Capella_SequenceMessage.gif" id="_C2P_sequenceMessage" name="Sequence Message" sortOrder="20" />
    <option description="Beschreibt ein Set von konsistenten Daten unter Betrachtung eines Verwendungskontextes." iconURL="/polarion/icons/group/Capella_ExchangeItem.gif" id="_C2P_exchangeItem" name="Exchange Item" sortOrder="21" />
    <option description="Definiert den Contract zwischen Komponenten und/oder zwischen Komponenten und Aktoren. die Logische Interfaces beschreiben diesen Contract in jeweils einer Richtung der Kommunikation." iconURL="/polarion/icons/group/Capella_Interface.gif" id="_C2P_logicalInterface" name="Logical Interface" sortOrder="22" />
    <option description="Beschreibt die Struktur und Inhalt von Informationen." iconURL="/polarion/icons/group/Capella_Class.gif" id="_C2P_class" name="Class" sortOrder="23" />
    <option description="Bezeichnet den Contract zwischen Komponenten und/oder zwischen Komponenten und Aktoren und gruppiert die Logischen Interfaces." iconURL="/polarion/icons/group/Capella_InterfacePkg.gif" id="_C2P_logicalBiDirectionalInterface" name="Logical Bi-Directional Interface" sortOrder="24" />
    <option description="The recommended way for managing requirement in to use a dedicated tool (typically DOORS).  However, in certain cases, it might be useful to manage requirements in a simpler way within Capella. Requirements can be attached to any Capella model element." iconURL="/polarion/icons/group/Capella_rationale.gif" id="_C2P_rationale" name="Rationale" sortOrder="25" />
    <option description="Each set of Modes or States linked to each other by transitions is named a finite State Machine. A Mode or State ‘A’ can be decomposed into sub-modes (and possibly sub-states) Ai. Entering a Mode or State can: Enable or disable the activation of Functions (which might be only available in some Modes or States) Modify some attributes of Functions or Components (e.g. non functional properties) Modify global Data in the model." iconURL="/polarion/icons/group/Capella_StateMachine.gif" id="_C2P_stateMachine" name="State Machine" sortOrder="26" />
    <option description="Communication Means have a slightly different meaning according to the followed model strategy. When following Arcadia, Component Exchanges basically connect Components (through Component Ports) and carry Functional Exchanges between the source and target Components. Their Kind in that case is set to FLOW. In a context where Components are reusable (i.e. can be used to type several Parts), Component Exchanges also serve to connect Parts (and thus, not directly Components at Type level). Their Kind in that case is set to ASSEMBLY.  Component Exchanges are also used technically to model Delegation between Component Ports (in that case, their Kind is set to DELEGATION)." iconURL="/polarion/icons/group/Capella_CommunicationMean.gif" id="_C2P_communicationMean" name="Communication Mean" sortOrder="27" />
    <option description="A Constraint gives access to the specification." iconURL="/polarion/icons/group/Capella_Constraint.gif" id="_C2P_constraint" name="Constraint" sortOrder="28" />
    <option description="Scenarios describe dynamic, time-related interactions between elements: Operational Entities and Actors, the System itself, the System Components. These interactions are expressed through temporally ordered Sequence Messages." iconURL="/polarion/icons/group/Capella_Scenario.gif" id="_C2P_scenario" name="Scenario" sortOrder="29" />
    <option description="A Physical Path is an ordered set of Physical Links conveying a Component Exchange." iconURL="/polarion/icons/group/Capella_PhysicalPath.gif" id="_C2P_physicalPath" name="Physical Path" sortOrder="30" />
    <option description="Physical Links are the communication/transportation means linking Node Physical Components. They carry the Component Exchanges existing between the Behavior Physical Components." iconURL="/polarion/icons/group/Capella_PhysicalLink.gif" id="_C2P_physicalLink" name="Physical Link" sortOrder="31" />
    <option description="External entity (user, operator or other system) interacting directly with the System under study." iconURL="/polarion/icons/group/Capella_PhysicalActor.gif" id="_C2P_physicalActor" name="Physical Actor" sortOrder="32" />
    <option description="A System/Logical/Physical Function is an action, an operation or a service fulfilled by one Component or Actor. It has input and output Ports, respectively targets and sources of Functional Exchanges (information, data, material, fluid, etc.)." iconURL="/polarion/icons/group/Capella_PhysicalFunction.gif" id="_C2P_physicalFunction" name="Physical Function" sortOrder="33" />
    <option description="A Component is a constituent part of either the System or Internal Actors. He contributes to their behavior, properties and characteristics, by interacting with other Components and with both Internal and External Actors." iconURL="/polarion/icons/group/Capella_PhysicalComponentBehavior.gif" id="_C2P_physicalComponentBehavior" name="Physical Component Behavior" sortOrder="34" />
    <option description="A Component is a constituent part of either the System or Internal Actors. He contributes to their behavior, properties and characteristics, by interacting with other Components and with both Internal and External Actors." iconURL="/polarion/icons/group/Capella_PhysicalComponentNode.gif" id="_C2P_physicalComponentNode" name="Physical Component Node" sortOrder="35" />
    <option description="A Component is a constituent part of either the System or Internal Actors. He contributes to their behavior, properties and characteristics, by interacting with other Components and with both Internal and External Actors." iconURL="/polarion/icons/group/Capella_PhysicalComponent.gif" id="_C2P_physicalComponent" name="Physical Component" sortOrder="36" />
    <option description="The Mode of an element defines the kind of element exploitation expected in given use conditions. A Mode is activated by operators. It is usually the result of a design decision and is an expected behavior feature of the element." iconURL="/polarion/icons/group/Capella_Mode.gif" id="_C2P_mode" name="Mode" sortOrder="37" />
    <option description="The State of an element characterizes the element behavior in given environmental conditions. A State is activated mainly by external conditions, or by operators. It may be unexpected and even suffered." iconURL="/polarion/icons/group/Capella_State.gif" id="_C2P_state" name="State" sortOrder="38" />
</enumeration>
